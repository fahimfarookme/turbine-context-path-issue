server.port=8896

# not needed if you are running on a machine that knows its own hostname (it is looked up using java.net.InetAddress by default).
eureka.instance.hostname=primary-host

# Indicates whether or not this instance should register its information with eureka server for discovery by others. In some cases, you do not want your instances to be discovered whereas you just want do discover other instances.
# false --> single eureka server instance at dev testing
eureka.client.register-with-eureka=false

# Indicates whether this client should fetch eureka registry information from eureka server
# false --> single eureka server instance at dev testing
eureka.client.fetch-registry=true

# Map of availability zone to list of fully qualified URLs to communicate with eureka server. Each value can be a single URL or a comma separated list of alternative locations.
# What other eureka servers should this server register with
# i.e the primary value should be: http://eureka-secondary:8012/eureka/,http://eureka-tertiary:8013/eureka/
# Use profiles to manage this. applcation-primary.properties, etc.
eureka.client.service-url.defaultZone=http://primary-host:7776/eureka


turbine.app-config=HYSTRIX-EUREKA-CLIENT
turbine.cluster-name-expression=new String("default")
InstanceDiscovery.impl=me.fahimfarook.hystrix.LocalContextRootAwareInstanceDiscovery